{"version":3,"sources":["src/users/index.ts","src/resources/index.ts","src/notes/index.ts","src/nav-bar/navbar.ts","src/main.ts","src/json/user.ts","src/json/note.ts","src/json/category.ts","src/index.ts","src/environment.ts","src/categories/index.ts","src/app.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {autoinject} from 'aurelia-framework';\nimport {HttpClient, json} from 'aurelia-fetch-client';\nimport {User} from './../json/user';\n\n@autoinject\nexport class index {\n users = new Array<User>();\n newUser= new User(\"\", \"\", \"\",\"\");\n index = 1;\n now = new Date().toLocaleDateString();\n\n  constructor(private httpClient: HttpClient) {\n      httpClient.configure(config => {\n          config\n            .withBaseUrl('http://dmoore-csc435.azurewebsites.net/api/')\n            .withDefaults({\n                headers: {\n                    'Content-Type': 'application/json',\n                }\n            });\n      });\n      this.getData();\n    }\n    async getData() {\n        console.log(\"GET called\");\n        this.httpClient.fetch('users/', {\n            method: 'GET'\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log(data);\n            this.users = new Array<User>();\n            for(let entry of data) {\n                var user = new User(entry.id, entry.email, entry.name, entry.createdOn);\n                this.users.push(user);\n                this.index = user.id + 1;\n            }\n        })\n    }\n    async submitData() {\n        this.newUser.createdOn = this.now;\n        console.log(\"PUT or POST called\")\n        if(this.newUser.id < 1 || this.newUser.name.length < 1 || this.newUser.email.length < 1 || this.newUser.createdOn.length < 1) {\n            alert(\"ERROR! please check and try again.\");\n        } else {\n            console.log(\"a new User was posted\");\n            let exists = false;\n\n            for(let cat of this.users) {\n                if(cat.id == this.newUser.id) {\n                    exists = true;\n                }\n            }\n\n            if(exists) {\n                console.log(\"PUT called\");\n                this.httpClient.fetch('users/' + this.newUser.id, {\n                    method: 'PUT',\n                    body: JSON.stringify(this.newUser)\n                })\n                .then(data => {\n                    console.log(data);\n                    if(data.status == 200) {\n                        this.getData();\n                    }\n                });\n            } else {\n                console.log(\"POST Called\");\n                this.httpClient.fetch('users', {\n                    method: 'POST',\n                    body: JSON.stringify(this.newUser)\n                })\n                .then(data => {\n                    console.log(data);\n                    if(data.status == 200){\n                        this.getData();\n                    }\n                });\n            }\n        }\n    }\n    async deleteData(num) {\n        console.log(\"DELETE called on User: \" + num);\n\n        this.httpClient.fetch('users/' + num, {\n            method: 'DELETE'\n        })\n        .then(data => {\n            console.log(data);\n            if(data.status == 200) {\n                this.getData();\n            }\n        });\n    }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import {autoinject} from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\nimport {Note} from './../json/note';\r\nimport {User} from './../json/user';\r\nimport {Category} from './../json/category'\r\n\r\n@autoinject\r\nexport class index {\r\n notes = new Array<Note>();\r\n cats = new Array<Category>();\r\n users = new Array<User>();\r\n newNote= new Note(\"\",\"\",\"\",\"\", \"\", \"\",\"\");\r\n index = 1;\r\n now = new Date().toLocaleDateString();\r\nselectedCat: number = null;\r\nselectedUsr: number = null;\r\n  constructor(private httpClient: HttpClient) {\r\n      httpClient.configure(config => {\r\n          config\r\n            .withBaseUrl('http://dmoore-csc435.azurewebsites.net/api/')\r\n            .withDefaults({\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n      });\r\n      this.callGets();\r\n    }\r\n\r\n    callGets() {\r\n        this.getCategories();\r\n        this.getUsers();\r\n        this.getData();\r\n    }\r\n    async getData() {\r\n        console.log(\"GET called\");\r\n        this.httpClient.fetch('notes/', {\r\n            method: 'GET'\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            this.notes = new Array<Note>();\r\n            for(let entry of data) {\r\n                var note = new Note(entry.ID,entry.Title,entry.Note, entry.createdOn,entry.CategoryId, entry.isDeleted, entry.userID);\r\n                this.notes.push(note);\r\n                this.index = note.id + 1;\r\n            }\r\n        })\r\n    }\r\n\r\n    async getUsers() {\r\n        console.log(\"GET called\");\r\n        this.httpClient.fetch('users/', {\r\n            method: 'GET'\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            this.users = new Array<User>();\r\n            for(let entry of data) {\r\n                var user = new User(entry.id, entry.email, entry.name, entry.createdOn);\r\n                this.users.push(user);\r\n            }\r\n        })\r\n    }\r\n\r\n    async getCategories() {\r\n        console.log(\"GET called\");\r\n        this.httpClient.fetch('categories', {\r\n            method: 'GET'\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            this.notes = new Array<Note>();\r\n            for(let entry of data) {\r\n                var cat = new Category(entry.id, entry.name);\r\n                this.cats.push(cat);\r\n            }\r\n        })\r\n    }\r\n    async submitData() {\r\n        this.newNote.createdOn = this.now;\r\n        this.newNote.categoryid = this.selectedCat;\r\n        this.newNote.userid = this.selectedUsr;\r\n        console.log(\"PUT or POST called\")\r\n        if(this.newNote.id < 1 || this.newNote.title.length < 1 || this.newNote.note.length < 1 || \r\n            this.newNote.createdOn.length < 1 || this.newNote.userid < 1 || this.newNote.categoryid < 1) {\r\n            alert(\"ERROR! please check and try again.\");\r\n        } else {\r\n            console.log(\"a new Note was posted\");\r\n            let exists = false;\r\n\r\n            for(let note of this.notes) {\r\n                if(note.id == this.newNote.id) {\r\n                    exists = true;\r\n                }\r\n            }\r\n\r\n            if(exists) {\r\n                console.log(\"PUT called\");\r\n                this.httpClient.fetch('notes/' + this.newNote.id, {\r\n                    method: 'PUT',\r\n                    body: JSON.stringify(this.newNote)\r\n                })\r\n                .then(data => {\r\n                    console.log(data);\r\n                    if(data.status == 200) {\r\n                        this.getData();\r\n                    }\r\n                });\r\n            } else {\r\n                console.log(\"POST Called\");\r\n                this.httpClient.fetch('notes/', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(this.newNote)\r\n                })\r\n                .then(data => {\r\n                    console.log(data);\r\n                    if(data.status == 200){\r\n                        this.getData();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    async deleteData(num) {\r\n        console.log(\"DELETE called on Note: \" + num);\r\n\r\n        this.httpClient.fetch('notes/' + num, {\r\n            method: 'DELETE'\r\n        })\r\n        .then(data => {\r\n            console.log(data);\r\n            if(data.status == 200) {\r\n                this.getData();\r\n            }\r\n        });\r\n    }\r\n}\r\n","import {bindable} from 'aurelia-framework';\nimport {containerless} from 'aurelia-framework';\n\n@containerless\nexport class NavBar {\n  @bindable router = null;\n}\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class User {\r\n    id: number;\r\n    email: string;\r\n    name: string;\r\n    createdOn: string;\r\n\r\n    constructor(id, email, name, createdOn) {\r\n        this.id = id;\r\n        this.email = email;\r\n        this.name = name;\r\n        this.createdOn = createdOn;\r\n    }\r\n}","export class Note {\r\n    id: number;\r\n    title: string;\r\n    note: string;\r\n    createdOn: string;\r\n    categoryid: number;\r\n    isDeleted: boolean;\r\n    userid: number;\r\n\r\n    constructor(id, title, note, createdOn, categoryid, isDeleted, userid) {\r\n        this.id = id;\r\n        this.title = title;\r\n        this.note = note;\r\n        this.createdOn = createdOn;\r\n        this.categoryid = categoryid;\r\n        this.isDeleted = isDeleted;\r\n        this.userid = userid;\r\n    }\r\n}","export class Category {\r\n    id: number;\r\n    name: string;\r\n\r\n    constructor(id, name) {\r\n        this.id = id;\r\n        this.name = name;\r\n    }\r\n}","export class index {\n  \n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {autoinject} from 'aurelia-framework';\nimport {HttpClient, json} from 'aurelia-fetch-client';\nimport {Category} from './../json/category';\n\n@autoinject\nexport class index {\n  categories = new Array<Category>();\n newCat = new Category(\"\", \"\");\n index = 1;\n\n  constructor(private httpClient: HttpClient) {\n      httpClient.configure(config => {\n          config\n            .withBaseUrl('http://dmoore-csc435.azurewebsites.net/api/')\n            .withDefaults({\n                headers: {\n                    'Content-Type': 'application/json',\n                }\n            });\n      });\n      this.getData();\n    }\n    async getData() {\n        console.log(\"GET called\");\n        this.httpClient.fetch('categories', {\n            method: 'GET'\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log(data);\n            this.categories = new Array<Category>();\n            for(let entry of data) {\n                var cat = new Category(entry.id, entry.name);\n                this.categories.push(cat);\n                this.index = cat.id + 1;\n            }\n        })\n    }\n    async submitCat() {\n        console.log(\"PUT or POST called\")\n        if(this.newCat.id < 1 || this.newCat.name.length < 1) {\n            alert(\"ERROR! please check and try again.\");\n        } else {\n            console.log(\"a new category was posted\");\n            let exists = false;\n\n            for(let cat of this.categories) {\n                if(cat.id == this.newCat.id) {\n                    exists = true;\n                }\n            }\n\n            if(exists) {\n                console.log(\"PUT called\");\n                this.httpClient.fetch('categories/' + this.newCat.id, {\n                    method: 'PUT',\n                    body: JSON.stringify(this.newCat)\n                })\n                .then(data => {\n                    console.log(data);\n                    if(data.status == 200) {\n                        this.getData();\n                    }\n                });\n            } else {\n                console.log(\"POST Called\");\n                this.httpClient.fetch('categories', {\n                    method: 'POST',\n                    body: JSON.stringify(this.newCat)\n                })\n                .then(data => {\n                    console.log(data);\n                    if(data.status == 200){\n                        this.getData();\n                    }\n                });\n            }\n        }\n    }\n    async deleteData(num) {\n        console.log(\"DELETE called on Category: \" + num);\n\n        this.httpClient.fetch('categories/' + num, {\n            method: 'DELETE'\n        })\n        .then(data => {\n            console.log(data);\n            if(data.status == 200) {\n                this.getData();\n            }\n        });\n    }\n}","import {Router, RouterConfiguration} from 'aurelia-router';\n\nexport class App {\n  router: Router;\n  \n  constructor() {}\n\n  configureRouter(config: RouterConfiguration, router: Router) {\n    config.title = 'webAPI';\n    config.map([\n      { route: ['', 'home'],  name: 'home', moduleId: 'index', title: 'Home'},\n      { route: '/users',  name: 'users', moduleId: './users/index', title: 'Users'},\n      { route: '/categories',  name: 'categories', moduleId: './categories/index', title: 'Categories'},\n      { route: '/notes',  name: 'notes', moduleId: './notes/index', title: 'Notes'}\n    ]);\n    \n    config.fallbackRoute('home');\n\n    this.router = router;\n  }\n}\n"],"sourceRoot":"../.."}